#!/usr/bin/env python
import sys
import sqlite3
import urllib, json

class Transaction(object):
    pair = ""
    action = ""
    amount = 0.0
    price = 0.0

def get_bags():
	bags = {}
	con = sqlite3.connect("db.sqlite")
	con.row_factory = sqlite3.Row
	cur = con.execute("SELECT * FROM transactions;")
	for row in cur:
            tx = Transaction()
            tx.pair = row['pair']
	    tx.amount = row['amount']
	    tx.price = row['price']
	    tx.action = row['action']
            sym = tx.pair.split("_")[0]
	    if sym == "BTC":
	        continue
	    if sym not in bags:
	        bags[sym] = []
	    bags[sym].append(tx)
	con.close()
	return bags

def bttrex(sym, amount):
    elms = sym.split("_")
    bsym = elms[1] + "-" + elms[0]
    url = "https://bittrex.com/api/v1.1/public/getticker?market=" + bsym
    response = urllib.urlopen(url)
    data = json.loads(response.read())
    rate = float(data["result"]["Last"])
    return rate * amount

def btc_price(sym, amount):
    return bttrex(sym, amount)

if __name__ == "__main__":
	bags = get_bags()
	keys = bags.keys()
	keys.sort()
        START_BTC = 1.261
        BTC = START_BTC
        TOTAL_WORTH = 0
	for k in keys:
            base_worth = 0.0
            worth_now = 0.0
            amount = 0.0
            for tx in bags[k]:
                if tx.action == "BUY":
                    base_worth += (tx.amount * tx.price)
                    amount += tx.amount
                    BTC -= (tx.amount * tx.price)
                if tx.action == "SELL":
                    base_worth -= (tx.amount * tx.price)
                    amount -= tx.amount
                    BTC += (tx.amount * tx.price)
	    worth_now = btc_price(tx.pair, amount)
            TOTAL_WORTH += worth_now
            diff = 100.0*((worth_now/base_worth)-1.0)
            print "%s:\t%14.9f\t=>\t(%fB | %fB | %+6.2f%%)" % (k, amount, base_worth, worth_now, diff) 
        print "BTC:\t%14.9f" % BTC
        print "-" * 40
        TOTAL_WORTH += BTC
        diff = 100.0*((TOTAL_WORTH/START_BTC)-1.0)
        print "TOTAL:\t%14.9f\t=>\t(%fB | %fB | %+6.2f%%)" % (TOTAL_WORTH, START_BTC, TOTAL_WORTH, diff)
